# Usage:
#
# export ZYMTRACE_LICENSE_KEY=your-license-key
# docker compose up -d --remove-orphans
#
# Alternative ways to set the license key:
# env ZYMTRACE_LICENSE_KEY=your-license-key docker compose up -d --remove-orphans
#
# Or create a .env file with:
# ZYMTRACE_LICENSE_KEY=your-license-key
# Then run: docker compose up -d --remove-orphans
#
# Note: ZYMTRACE_LICENSE_KEY is required for the services to start properly
# 
# Visit 127.0.0.1:8080

name: zymtrace

x-common: &x-common
  networks: [zymtrace]
  restart: unless-stopped

x-svc: &x-svc
  <<: *x-common
  image: ${SVC_IMAGE:-ghcr.io/zystem-io/zymtrace-pub-backend:25.6.0}

x-db-deps: &x-db-deps
  depends_on:
    migrate: { condition: service_completed_successfully }
    clickhouse: { condition: service_healthy }
    minio: { condition: service_healthy }
    psql: { condition: service_healthy }

x-db-credentials: &db-credentials
  POSTGRES_USER: zystem
  POSTGRES_PASSWORD: metsyz

  CLICKHOUSE_USER: zystem
  CLICKHOUSE_PASSWORD: metsyz

  IDENTITY__POSTGRES__ADDR: psql
  SYMDB__POSTGRES__ADDR: psql
  INGEST__CLICKHOUSE__ADDR: clickhouse
  INGEST__METRICS__CLICKHOUSE__ADDR: clickhouse

services:
  migrate:
    <<: *x-svc
    command: zymtrace-cli migrate
    environment:
      <<: *db-credentials
    depends_on:
      clickhouse: { condition: service_healthy }
      psql: { condition: service_healthy }
    restart: "no"

  #
  # Data storage.
  #
  clickhouse:
    <<: *x-common
    image: clickhouse/clickhouse-server:25.3.2.39
    environment:
      <<: *db-credentials
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    volumes:
      - clickhouse-data:/var/lib/clickhouse
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  psql:
    <<: *x-common
    image: postgres:17.4
    environment:
      <<: *db-credentials
    volumes:
      - psql-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  minio:
    <<: *x-common
    image: minio/minio:RELEASE.2024-12-18T13-15-44Z
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio123}
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 3s
      retries: 3

  createbuckets:
    networks: [zymtrace]
    image: minio/minio
    depends_on:
      minio:
        condition: service_healthy
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio123}
    entrypoint: >
      /bin/sh -c "
      mc config host add myminio http://minio:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD};
      mc mb myminio/zystem-symdb;
      mc mb myminio/zystem-pkgmirror-real;
      mc mb myminio/zystem-pkgfiles;
      mc mb myminio/zystem-symbolblobs;
      exit 0;
      "

  #
  # Services.
  #
  ingest:
    <<: [*x-svc, *x-db-deps]
    entrypoint: zymtrace-ingest
    ports: ["127.0.0.1:8375:8375"]
    environment:
      <<: *db-credentials
      INGEST__IDENTITY_SERVICE__ENDPOINT: "http://identity:7829"
      INGEST__SYMDB__ENDPOINT: "http://symdb:6107"
      INGEST__LICENSE__KEY: ${ZYMTRACE_LICENSE_KEY}

  identity:
    <<: [*x-svc, *x-db-deps]
    entrypoint: zymtrace-identity
    environment:
      <<: *db-credentials

  web:
    <<: [*x-svc, *x-db-deps]
    entrypoint: zymtrace-web
    ports: ["127.0.0.1:9933:9933"]
    environment:
      <<: *db-credentials
      WEB__CLICKHOUSE__ADDR: "clickhouse:9000"
      WEB__SYMDB__ENDPOINT: "http://symdb:6107"
      WEB__IDENTITY_SERVICE__ENDPOINT: "http://identity:7829"
      WEB__LICENSE__KEY: ${ZYMTRACE_LICENSE_KEY}

  symdb:
    <<: [*x-svc, *x-db-deps]
    entrypoint: zymtrace-symdb
    ports: ["127.0.0.1:6107:6107"]
    environment:
      <<: *db-credentials
      SYMDB__IDENTITY_SERVICE__ENDPOINT: "http://identity:7829"
      SYMDB__SYMBOL_BUCKET__AWS_ENDPOINT: http://minio:9000

  #
  # UI.
  #
  ui:
    <<: *x-common
    image: ${UI_IMAGE:-ghcr.io/zystem-io/zymtrace-pub-ui:latest}
    ports: ["127.0.0.1:8080:80"]
    environment:
      WEB_SERVICE: "http://web:9933"
      INGEST_SERVICE: "grpc://ingest:8375"
      SYMDB_SERVICE: "grpc://symdb:6107"

volumes:
  minio-data: {}
  clickhouse-data: {}
  psql-data: {}

networks:
  zymtrace:
    driver: bridge
